{% extends 'base.html.twig' %}

{% block title %}Hello SortieController!{% endblock %}

{% block body %}

    <div class="text-end">
        Date du jour : {{ "now"|date("d/m/Y") }} <br>
        Participant : {{ app.user.pseudo | capitalize }} <br>
    </div>

    {# Recherche de sortie #}
    <div class="row">
        <h2 class="text-center">Filtrer les sorties</h2>
        {% form_theme formSortieSearch 'bootstrap_4_layout.html.twig' %}
        {{ form_start(formSortieSearch) }}
        <div class="row justify-content-center">
            <div class="col col-7 justify-content-center border rounded-3 border-3 border-primary p-2">
                <div class="row ">
                    <div class="col">
                        {{ form_row(formSortieSearch.campus) }}
                        {{ form_row(formSortieSearch.nom_contient) }}
                        {{ form_row(formSortieSearch.date_debut) }}
                    </div>
                    <div class="col">
                        {{ form_row(formSortieSearch.mes_sorties) }}
                        {{ form_row(formSortieSearch.inscrit_oui) }}
                        {{ form_row(formSortieSearch.inscrit_non) }}
                        {{ form_row(formSortieSearch.sorties_passees) }}
                        {{ form_row(formSortieSearch.date_fin) }}
                    </div>
                </div>
            </div>
        </div>
        {{ form_end(formSortieSearch) }}
    </div>
    <div class="row mt-4 justify-content-center text-center">
        <div role alert id="app_flash" hidden></div>
    </div>

    {# Affichage du tableau de résultats #}
    <table class="table mt-2">
        <thead>
            <tr>
                <th scope="col">Nom de la sortie</th>
                <th scope="col">Date limite d'inscription</th>
                <th scope="col">Date de la sortie</th>
                <th scope="col">Nb inscrits/Nb places</th>
                <th scope="col">Etat</th>
                <th scope="col">Inscrit</th>
                <th scope="col">Organistateur</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
{% endblock %}

{% block javascripts %}
    <script>

        window.addEventListener('load', ()=>{
            document.getElementById("sortie_search_inscrit_oui").addEventListener('change', updateSearch);
            document.getElementById("sortie_search_inscrit_non").addEventListener('change', updateSearch);
            document.getElementById("sortie_search_mes_sorties").addEventListener('change', updateSearch);
            document.getElementById("sortie_search_sorties_passees").addEventListener('change', updateSearch);
            document.getElementById("sortie_search_date_debut").addEventListener('change', updateSearch);
            document.getElementById("sortie_search_nom_contient").addEventListener('change', updateSearch);
            document.getElementById("sortie_search_campus").addEventListener('change', updateSearch);
            updateSearch(null);
        })

        function getFilters(){
            //Récupération des valeurs de recherche
            return {
                inscrit_oui: document.getElementById("sortie_search_inscrit_oui").checked,
                inscrit_non: document.getElementById("sortie_search_inscrit_non").checked,
                mes_sorties: document.getElementById("sortie_search_mes_sorties").checked,
                date_debut: document.getElementById("sortie_search_date_debut").value,
                date_fin: document.getElementById("sortie_search_date_fin").value,
                sorties_passees: document.getElementById("sortie_search_sorties_passees").checked,
                nom_contient: document.getElementById("sortie_search_nom_contient").value,
                campus: document.getElementById("sortie_search_campus").value,
            };
        }

        function updateSearch(event, route) {
            fetch(route===undefined ? '{{ path('sortie_refresh') }}' : route, {
                method: "POST",
                body: JSON.stringify(getFilters()),
                mode: "same-origin",
                dataType: "json"
            })
                .then(response => response.json())
                .then(response => {
                    let div_msg = document.getElementById("app_flash");
                    //gestion de l'affichage des messages
                    div_msg.hidden=true;
                    let results = JSON.parse(response);
                    console.log(results)
                    updateView(results.datas, event);
                    if(results.msgGroup !== undefined && results.msg !== undefined) {
                        div_msg.className = "mt-2 col-9 alert alert-" + results.msgGroup;
                        div_msg.innerText = results.msg;
                        div_msg.hidden = false;
                    }
                })
                .catch(error => {
                    alert("Erreur : " + error);
                })
        }

        function suisJeInscrit(sortie, userid){
            return sortie.inscrits.find(users => users.id === userid) !== undefined;
        }

        function updateView(sorties){
            let tbody = document.querySelector("tbody");
            tbody.innerHTML="";
            for (const sortie of sorties) {
                let trEl = document.createElement('tr');
                //Nom de la sortie
                let nomEl = document.createElement('td');
                nomEl.innerText = sortie.nom;
                trEl.append(nomEl);
                //Date limite d'inscription
                let dateInscriptionEl = document.createElement('td');
                dateInscriptionEl.innerText = new Date(sortie.dateLimiteInscription).toLocaleDateString();
                trEl.append(dateInscriptionEl);
                //Date de sortie
                let dateSortieEl = document.createElement('td');
                dateSortieEl.innerText = new Date(sortie.dateHeureDebut).toLocaleDateString();
                trEl.append(dateSortieEl);
                //Nombre d'inscrit
                let nbInscritEl = document.createElement('td');
                nbInscritEl.innerText = sortie.inscrits.length + "/" + sortie.nbInscriptionMax;
                trEl.append(nbInscritEl);
                //Statut sortie
                let statutEl = document.createElement('td');
                statutEl.innerText = sortie.statut;
                trEl.append(statutEl);
                //Suis-je inscrit
                let inscritEl = document.createElement('td');
                inscritEl.innerText = suisJeInscrit(sortie, {{ app.user.id }}) ? 'oui' : 'non';
                trEl.append(inscritEl);
                //Organisateur
                let organisateurEl = document.createElement('td');
                organisateurEl.innerText = sortie.organisateur.pseudo;
                trEl.append(organisateurEl);

                //Liens
                let liensEl = document.createElement('td');
                trEl.append(liensEl);

                    //Je ne suis pas organisateur
                    if (sortie.organisateur.id !== {{ app.user.id }}){
                        //Afficher
                        let afficherEl = document.createElement('a');
                        let url_afficher = '{{ path("sortie_view", {'id': '0'}) }}'.replace("0", sortie.id);
                        afficherEl.innerText = "Afficher";
                        afficherEl.href = url_afficher;
                        afficherEl.className = "btn btn-outline-info btn-sm mx-1";
                        liensEl.append(afficherEl);

                    }
                    if(sortie.statut === 'Ouverte'){
                        let url_inscrire = '{{ path("sortie_inscrire", {'id': '0'}) }}'.replace("0", sortie.id);
                        let url_desinscrire = '{{ path("sortie_desinscrire", {'id': '0'}) }}'.replace("0", sortie.id);
                        let inscrireDesinscrireEl = document.createElement('button');
                        inscrireDesinscrireEl.className = "btn btn-outline-success btn-sm mx-1";
                        //S'inscrire
                        if( !suisJeInscrit(sortie, {{ app.user.id }}) ) {
                            if( sortie.inscrits.length < sortie.nbInscriptionMax){
                                inscrireDesinscrireEl.innerText="S'inscrire";
                                inscrireDesinscrireEl.addEventListener('click', function(event){
                                    updateSearch(event, url_inscrire);
                                })
                                liensEl.append(inscrireDesinscrireEl);
                            }
                        }
                        //Se désinscrire
                        else{
                            inscrireDesinscrireEl.innerText="Se désinscrire";
                            inscrireDesinscrireEl.addEventListener('click', function(event){
                                updateSearch(event, url_desinscrire);
                            })
                            liensEl.append(inscrireDesinscrireEl);
                        }
                    }

                    //Je suis l'organisateur
                    if (sortie.organisateur.id === {{ app.user.id }}){
                        let url_modifier = '{{ path("sortie_update", {'id': '0'}) }}'.replace("0", sortie.id);
                        let url_publier = '{{ path("sortie_publier", {'id': '0'}) }}'.replace("0", sortie.id);
                        let url_annuler = '{{ path("sortie_annuler", {'id': '0'}) }}'.replace("0", sortie.id);

                        if(sortie.statut === "Créée") {
                            let modifierEl = document.createElement('a');
                            modifierEl.className = "btn btn-outline-warning btn-sm mx-1";
                            modifierEl.innerText = "Modifier";
                            modifierEl.href = url_modifier;
                            liensEl.append(modifierEl);

                            let publierEl = document.createElement('button');
                            publierEl.className = "btn btn-outline-warning btn-sm mx-1";
                            publierEl.innerText = "Publier";
                            publierEl.addEventListener('click', function (event) {
                                updateSearch(event, url_publier);
                            })
                            liensEl.append(modifierEl);
                            liensEl.append(publierEl);
                        }

                        if(sortie.statut === "Créée" || sortie.statut === "Ouverte") {
                            let annulerEl = document.createElement('a');
                            annulerEl.className = "btn btn-outline-danger btn-sm mx-1";
                            annulerEl.innerText = "Annuler";
                            annulerEl.href = url_annuler;
                            liensEl.append(annulerEl);
                        }
                    }
                tbody.append(trEl);
            }
        }

    </script>
{% endblock %}
